{"version":3,"sources":["actions.js","reducers/index.js","reducers/user.js","reducers/repo.js","sagas.js","store.js","components/SearchUser.js","components/SearchRepos.js","components/Home.js","serviceWorker.js","index.js","App.js"],"names":["REQUEST_USER","REQUEST_REPO","requestUser","payload","type","receiveUser","requestRepo","receiveRepo","combineReducers","user","state","repo","getGithubUserData","getGithubRepoData","mySaga","action","getUser","a","async","axios","get","res","data","call","put","console","log","getRepo","items","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","run","SearchUser","input","Value","e","value","target","length","setState","this","props","onChange","onClick","Object","entries","className","key","id","name","blog","location","src","avatar_url","Component","connect","dispatch","bindActionCreators","i","description","repos","map","Home","to","exact","path","SearchRepos","Boolean","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc63404d.chunk.js","sourcesContent":["//* User constant\nexport const REQUEST_USER = \"REQUEST_USER\";\nexport const RECEIVE_USER = \"RECEIVE_USER\";\n//* Repo constant\nexport const REQUEST_REPO = \"REQUEST_REPO\";\nexport const RECEIVE_REPO = \"RECEIVE_REPO\";\n\n//* User actions\nexport const requestUser = payload => ({\n  type: REQUEST_USER,\n  payload: payload\n});\nexport const receiveUser = payload => ({\n  type: RECEIVE_USER,\n  payload: payload\n});\n\n//* Repo actions\n\nexport const requestRepo = payload => ({\n  type: REQUEST_REPO,\n  payload: payload\n});\nexport const receiveRepo = payload => ({\n  type: RECEIVE_REPO,\n  payload: payload\n});\n","import { combineReducers } from \"redux\";\n\nimport user from \"./user\";\nimport repo from \"./repo\";\n\nexport default combineReducers({\n  user,\n  repo\n});\n","import { RECEIVE_USER } from \"../actions\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case RECEIVE_USER:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { RECEIVE_REPO } from \"../actions\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case RECEIVE_REPO:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  REQUEST_USER,\n  REQUEST_REPO,\n  receiveUser,\n  receiveRepo\n} from \"./actions\";\n\nfunction* getGithubUserData(action) {\n  try {\n    const user = action.payload;\n    const getUser = async () => {\n      const res = await axios.get(`https://api.github.com/users/${user}`);\n      const data = await res.data;\n      return data;\n    };\n    const data = yield call(getUser);\n    yield put(receiveUser(data));\n  } catch (e) {\n    console.log(\"catch from saga\", e);\n  }\n}\nfunction* getGithubRepoData(action) {\n  try {\n    const repo = action.payload;\n    const getRepo = async () => {\n      const res = await axios.get(\n        `https://api.github.com/search/repositories?q=${repo}+language:all&sort=stars&order=desc`\n      );\n      //? con la opciÃ³n de buscar por lenguaje\n      //?  const res = await axios.get(`https://api.github.com/search/repositories?q=${repo}+language:javascript&sort=stars&order=desc`);\n      const data = await res.data.items;\n      return data;\n    };\n    const data = yield call(getRepo);\n    yield put(receiveRepo(data));\n  } catch (e) {\n    console.log(\"catch from saga\", e);\n  }\n}\n\nexport default function* mySaga() {\n  yield takeLatest(REQUEST_USER, getGithubUserData);\n  yield takeLatest(REQUEST_REPO, getGithubRepoData);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"./reducers\";\nimport mySaga from \"./sagas\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n// mount it on the Store\nconst composeEnhancer =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport default createStore(\n  reducer,\n  composeEnhancer(applyMiddleware(sagaMiddleware))\n);\n// then run the saga\nsagaMiddleware.run(mySaga);\n","import React, { Component } from \"react\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestUser } from \"../actions\";\n\nclass SearchUser extends Component {\n  state = {\n    input: \"\"\n  };\n  componentDidMount() {\n    console.log(this.props.user);\n  }\n  componentDidUpdate() {\n    console.log(this.props.user);\n  }\n  Value = e => {\n    const value = e.target.value;\n    value.length === 0\n      ? this.setState(() => ({ input: [] }))\n      : this.setState({ input: value });\n    return value;\n  };\n\n  render() {\n    const user = this.props.user;\n\n    return (\n      <div>\n        <p>Search User</p>\n        <input onChange={this.Value} type=\"text\" />\n        <button\n          onClick={() => {\n            this.props.requestUser(this.state.input);\n          }}\n        >\n          buscar\n        </button>\n        {Object.entries(user).length === 0 ? (\n          <div>\n            <h3>no hay user </h3>\n          </div>\n        ) : (\n          <div className=\"test-user\">\n            <div className=\"user\" key={user.id}>\n              {console.log(user)}\n              <h1>{user.name}</h1>\n              <h1>{user.blog}</h1>\n              <h1>{user.location}</h1>\n\n              <img src={user.avatar_url} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ user: state.user });\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ requestUser }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchUser);\n","import React, { Component } from \"react\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestRepo } from \"../actions\";\n\nclass SearchUser extends Component {\n  state = {\n    input: \"\"\n  };\n  componentDidMount() {\n    console.log(this.props.repos, \"props.repo from didmount\");\n  }\n  componentDidUpdate() {\n    console.log(this.props.repos, \"props.repo from didupdate\");\n  }\n  Value = e => {\n    const value = e.target.value;\n    value.length === 0\n      ? this.setState(() => ({ input: [] }))\n      : this.setState({ input: value });\n    return value;\n  };\n  repo = (repo, i) => (\n    <div className=\"repo\" key={repo.id}>\n      {console.log(repo)}\n      <p>repo </p>\n      <h1>{repo.name}</h1>\n      <p>{repo.description}</p>\n\n      {/* <img src={repo.picture.medium} /> */}\n    </div>\n  );\n  render() {\n    const repos = this.props.repos;\n    return (\n      <div>\n        <p>Search Repo</p>\n        <input onChange={this.Value} type=\"text\" />\n        <button\n          onClick={() => {\n            this.props.requestRepo(this.state.input);\n          }}\n        >\n          buscar\n        </button>\n        {Object.entries(repos).length === 0 ? (\n          <div>\n            <h3>no hay repos </h3>\n          </div>\n        ) : (\n          <div className=\"test-repo\">{repos.map(this.repo)}</div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ repos: state.repo });\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ requestRepo }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchUser);\n","import React, { Component } from \"react\";\nimport SearchUser from \"./SearchUser\";\nimport SearchRepos from \"./SearchRepos\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nclass Home extends Component {\n  componentDidMount() {\n    // this.props.requestApiData();\n  }\n  componentDidUpdate() {}\n\n  render() {\n    return (\n      // <div>\n      //   <p>Home component </p>\n      //   <SearchUser />\n      //   <SearchRepos />\n      // </div>\n\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/SearchUser\">SearchUser</Link>\n            </li>\n            <li>\n              <Link to=\"/SearchRepos\">SearchRepos</Link>\n            </li>\n          </ul>\n\n          <hr />\n          <Switch>\n            <Route exact path=\"/SearchUser\">\n              <SearchUser />\n            </Route>\n            <Route path=\"/SearchRepos\">\n              <SearchRepos />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\n\nimport store from \"./store\";\nimport Home from \"./components/Home\";\n\nexport default () => (\n  <Provider store={store}>\n    <Home />\n  </Provider>\n);\n"],"sourceRoot":""}